apiVersion: apps/v1
kind: Deployment
metadata:
  name: keycloak-deployment
  labels:
    app: keycloak
spec:
  replicas: 1
  selector:
    matchLabels:
      app: keycloak
  template:
    metadata:
      labels:
        app: keycloak
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
      containers:
        - name: keycloak
          image: quay.io/keycloak/keycloak:26.3.1
          args: [ "start" ]
          env:
            - name: KEYCLOAK_ADMIN
              valueFrom:
                secretKeyRef:
                  name:  keycloak-admin-pwd
                  key: username
            - name: KEYCLOAK_ADMIN_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak-admin-pwd
                  key: password
            - name: KC_PROXY_HEADERS
              value: "xforwarded"
            - name: KC_HTTP_ENABLED
              value: "true"
            - name: KC_HOSTNAME
              value: "auth.bugbear.fr"
            - name: KC_DB
              value: "postgres"
            - name: KC_DB_URL_HOST
              value: bugbear-main-cluster.postgres.svc.cluster.local
            - name: KC_DB_URL_DATABASE
              value: keycloak
            - name: KC_DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: keycloak.keycloak.bugbear-main-cluster.credentials
                  key: username
            - name: KC_DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: keycloak.keycloak.bugbear-main-cluster.credentials
                  key: password
            - name: KC_METRICS_ENABLED
              value: "true"
            - name: KC_HEALTH_ENABLED
              value: "true"
          ports:
            - name: http
              containerPort: 8080
            - name: health
              containerPort: 9000
          resources:
            requests:
              memory: "512Mi"
              cpu: "250m"
            limits:
              memory: "700Mi"
              cpu: "500m"
          readinessProbe:
            httpGet:
              path: /health/ready
              port: 9000
          livenessProbe:
            httpGet:
              path: /health/live
              port: 9000
          startupProbe:
            httpGet:
              path: /health/started
              port: 9000
            initialDelaySeconds: 120
            periodSeconds: 10
            failureThreshold: 12
